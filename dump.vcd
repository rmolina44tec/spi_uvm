$date
	Thu Jun 17 14:32:58 2021
$end

$version
	Synopsys VCS version R-2020.12-1_Full64
$end

$timescale
	10ps
$end

$comment Csum: 1 4aed84f4d6fd7cab $end


$scope module $unit $end
$upscope $end


$scope module tbench_top $end
$var reg 1 ! clk $end
$var reg 1 " reset $end

$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope module intf $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$var reg 1 % pndgn $end
$var reg 65 & D_pop [64:0] $end
$var reg 1 ' MISO $end
$var reg 1 ( pop $end
$var reg 65 ) D_push [64:0] $end
$var reg 1 * push $end
$var reg 1 + MOSI $end
$var reg 1 , SCLK $end
$var reg 1 - SCS $end
$upscope $end


$scope module DUT $end
$var wire 1 . CLK $end
$var wire 1 / reset $end
$var wire 1 0 pndgn $end
$var wire 65 1 D_pop [64:0] $end
$var wire 1 2 MISO $end
$var reg 1 3 pop $end
$var wire 65 4 D_push [64:0] $end
$var reg 1 5 push $end
$var wire 1 6 MOSI $end
$var wire 1 7 SCLK $end
$var wire 1 8 SCS $end
$var reg 8 9 state [7:0] $end
$var reg 65 : data_pop [64:0] $end
$var reg 65 ; data_push [64:0] $end
$var reg 24 < address [23:0] $end
$var reg 3 = index [2:0] $end
$var reg 32 > data [31:0] $end
$var reg 32 ? t_word [31:0] $end
$var reg 16 @ tspi_data_config [15:0] $end
$var reg 1 A tspi_config_en $end
$var reg 64 B tspi_data_tx [63:0] $end
$var reg 1 C tspi_send_data $end
$var reg 24 D bst_addr [23:0] $end
$var reg 32 E data_read [31:0] $end
$var reg 1 F end_send $end

$scope module spi1 $end
$var wire 1 . CLK $end
$var wire 1 / reset $end
$var wire 1 2 MISO $end
$var wire 16 G data_config [15:0] $end
$var wire 1 H config_enable $end
$var wire 64 I data_send [63:0] $end
$var wire 1 J send_data $end
$var reg 32 K data_read [31:0] $end
$var reg 1 L MOSI $end
$var reg 1 M CS $end
$var reg 1 N SCK $end
$var reg 1 O end_send $end
$var reg 16 P conf [15:0] $end
$var reg 8 Q counter_clk [7:0] $end
$var reg 64 R tx_shiftreg [63:0] $end
$var reg 2 S flag_edge_detector [1:0] $end
$var reg 1 T tx_loaddata $end
$var reg 8 U bits_count [7:0] $end
$var reg 32 V rx_shiftreg [31:0] $end
$var reg 1 W clk_enable $end
$var reg 1 X state0 $end
$var reg 8 Y state [7:0] $end
$var reg 1 Z MISO1 $end
$var reg 8 [ counter_CS [7:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module uvm_pkg $end
$var reg 32 \ UVM_UNBOUNDED_CONNECTIONS [31:0] $end
$var reg 1 ] uvm_start_uvm_declarations $end
$var time 64 ^ setting_offset $end
$var reg 32 _ setting_verbosity [31:0] $end
$var reg 1 ` is_verdi_set_verbosity_called $end
$var reg 32 a uvm_global_random_seed [31:0] $end
$upscope $end

$enddefinitions $end

#0
$dumpvars
0`
1]
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ^
b11111111111111111111111111111111 \
b00000000000000000000000000000000 _
b01000010000001111100110001000111 a
0!
1"
b00000000000000000000000000000000000000000000000000000000000000000 )
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
0F
03
05
0A
0C
b000000000000000000000000 <
b000000000000000000000000 D
b00000000000000000000000000000000 >
b00000000000000000000000000000000000000000000000000000000000000000 :
b00000000000000000000000000000000000000000000000000000000000000000 ;
b00000000000000000000000000000000 E
b000 =
b00000000 9
b00000000000000000000000000000000 ?
b0000000000000000 @
b0000000000000000000000000000000000000000000000000000000000000000 B
1M
0Z
1L
1N
0W
0O
1X
0T
b00000000 U
b0000000000000000 P
b00000000 [
b00000000 Q
b00000000000000000000000000000000 K
b00 S
b00000000000000000000000000000000 V
b00000000 Y
b1111111111111111111111111111111111111111111111111111111111111111 R
0#
1$
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
b00000000000000000000000000000000000000000000000000000000000000000 4
0.
1/
x0
x2
16
17
18
x'
1+
1,
1-
x%
0(
0*
b0000000000000000 G
0H
b0000000000000000000000000000000000000000000000000000000000000000 I
0J
$end
#500
1!
1#
1.
0"
0$
0/
b00000001 9
#600
b11001111001000100101010110101100111111111011101110110101011100100 &
b11001111001000100101010110101100111111111011101110110101011100100 1
#1000
0!
0#
0.
xZ
b10 S
#1500
1#
1.
bx0000000000000000000000000000000 V
bx0000000000000000000000000000000 K
bx0000000000000000000000000000000 E
#1600
b10111000001111111011110110001010111111001011110000101110110011000 &
b10111000001111111011110110001010111111001011110000101110110011000 1
#2000
0#
0.
b11 S
#2500
1#
1.
#3000
0#
0.
#3500
1#
1.
#4000
0#
0.
#4500
1#
1.
#5000
0#
0.
#5500
1#
1.
#6000
0#
0.
#6500
1#
1.
